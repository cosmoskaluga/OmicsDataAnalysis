[["index.html", "Omics Data Analysis course Chapter 1 Introduction 1.1 How to deal with R 1.2 Assignment and grading", " Omics Data Analysis course Dmitrii Smirnov 2024-02-07 Chapter 1 Introduction This bookdown will consist of three seminars for the following lectures delivering at “Omics Data Analysis” course at Skolkovo Institute of Science and Technology: Lecture 4: Differential Expression Analysis Lecture 8: Transcriptome Assembly Lecture 13: Lipidomics Data Analysis 1.1 How to deal with R Use the instruction: https://docs.google.com/document/d/1vyR7T7nHnWgRfQPntLU3U2jaZFJia8zH/edit?usp=sharing&amp;ouid=118110925940360211775&amp;rtpof=true&amp;sd=true 1.2 Assignment and grading When you complete all the tasks please upload to Canvas: Report with plots, pictures, answers and explanations. Your code (txt/pdf/R markdown or something else readable) How it will be graded: * The maximum is 7 points. For missing step - minus 5 points. If the report/code is missing - 0 points. For each missing figure/plot - minus 2 points. For each missing answer to ❓ - minus 2 points. For any other mistake - minus 0.2 point. "],["input-dataset.html", "Chapter 2 Input dataset 2.1 Count importing 2.2 DESeq2 object", " Chapter 2 Input dataset Today we will focus on the differential gene expression analysis to study the molecular signatures of Amyloid-β toxicity in yeast using the data obtained from GEO database (https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE128905). There are 2 experimental groups of replicates: Control and Aβ42 (yeasts expressing Aβ42 peptide) with 3 replicates per group. Raw reads were already preprocessed and Salmon pseudocounts are accessible here: /home/d.smirnov/homework4/SalmonOutput 2.1 Count importing Import libraries: library(dplyr) library(ggplot2) library(DESeq2) library(DOSE) library(pheatmap) library(tibble) library(clusterProfiler) data &lt;- read.csv(&quot;../../Data.csv&quot;, row.names = 1) We need a file which maps our samples to the corresponding sample groups that we are investigating. We will use the columns headers from the counts matrix as the row names of our metadata file and have single column to identify each sample. meta &lt;- colnames(data) %&gt;% .[-c(1)] %&gt;% strsplit(split = &#39;_&#39;) %&gt;% as.data.frame() %&gt;% t() rownames(meta) &lt;- colnames(data)[-c(1)] colnames(meta) &lt;- c(&quot;Genotype&quot;, &quot;Treatment&quot;, &quot;SampleID&quot;) meta &lt;- as.data.frame(meta) data &lt;- data[rowSums(data[,-c(1)]) &gt; 10, ] 2.2 DESeq2 object Let’s start by creating the DESeqDataSet object. To create the object we will need the count matrix and the metadata table as input. We will also need to specify a design formula. The design formula specifies the column(s) in the metadata table and how they should be used in the analysis. For our dataset we only have one column we are interested in, that is \\(~genotype\\). This column has two factor levels, which tells DESeq2 that for each gene we want to evaluate gene expression change with respect to two different levels. Create DESeq2Dataset object: dds &lt;- DESeqDataSetFromMatrix(countData = round(data[,-c(1)]), colData = meta, design = ~ Genotype + Treatment) ## converting counts to integer mode ## Warning in DESeqDataSet(se, design = design, ignoreRank): some variables in design formula are characters, converting to factors dds ## class: DESeqDataSet ## dim: 22783 12 ## metadata(1): version ## assays(1): counts ## rownames(22783): ENSMUSG00000051951 ENSMUSG00000103377 ... ENSMUSG00000063897 ENSMUSG00000095742 ## rowData names(0): ## colnames(12): KO_PBS_642 KO_PBS_641 ... Control_LPS_184 Control_LPS_149 ## colData names(3): Genotype Treatment SampleID "],["cross.html", "Chapter 3 Quality control 3.1 Normalization 3.2 Principal Component Analysis (PCA) 3.3 Correlation Heatmap (PCA)", " Chapter 3 Quality control 3.1 Normalization dds &lt;- estimateSizeFactors(dds) rld &lt;- rlog(dds, blind = TRUE) 3.2 Principal Component Analysis (PCA) plotPCA.mystyle &lt;- function (object, ntop = 2400, returnData = FALSE) { font.size &lt;- 18 rv &lt;- rowVars(assay(object)) r &lt;- assay(object) select &lt;- order(rv, decreasing = TRUE)[seq_len(min(ntop, length(rv)))] pca &lt;- prcomp(t(assay(object)[select, ])) percentVar &lt;- pca$sdev^2/sum(pca$sdev^2) d1 &lt;- data.frame(PC1 = pca$x[, 1], PC2 = pca$x[, 2], Genotype = meta$Genotype, Treatment = meta$Treatment, name = colnames(object)) if (returnData) { attr(d, &quot;percentVar&quot;) &lt;- percentVar[1:2] return(d) } ggplot(data = d1, aes_string(x = &quot;PC1&quot;, y = &quot;PC2&quot;)) + geom_point(aes_string(color = &quot;Genotype&quot;, shape = &quot;Treatment&quot;), size = 6) + xlab(paste0(&quot;PC1: &quot;, round(percentVar[1] * 100), &quot;% variance&quot;)) + ylab(paste0(&quot;PC2: &quot;, round(percentVar[2] * 100), &quot;% variance&quot;)) + theme_dose(font.size = font.size)+ #+ geom_label_repel(aes(label = colnames(data)), label.size = 0.1, box.padding = 0.2) theme( legend.key = element_rect(colour = NA, fill = NA), legend.title= element_blank(), legend.text=element_text(size=font.size-2) ) } plotPCA.mystyle(rld) 3.3 Correlation Heatmap (PCA) "],["differential-testing.html", "Chapter 4 Differential testing", " Chapter 4 Differential testing "],["gene-annotation.html", "Chapter 5 Gene annotation", " Chapter 5 Gene annotation "],["visualization.html", "Chapter 6 Visualization 6.1 Volcano plot", " Chapter 6 Visualization 6.1 Volcano plot "],["functional-analysis.html", "Chapter 7 Functional analysis", " Chapter 7 Functional analysis "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
